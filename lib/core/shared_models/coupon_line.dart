import 'percentage.dart';
import 'currency.dart';
import 'status.dart';
import 'money.dart';
import 'cart.dart';

class CouponLine {
  late int? id;
  late String name;
  late String? code;
  late Currency currency;
  late Status isCancelled;
  late String discountType;
  late String? description;
  late Status offerDiscount;
  late int remainingQuantity;
  late DateTime? endDatetime;
  late Money minimumGrandTotal;
  late DateTime? startDatetime;
  late List<String> hoursOfDay;
  late Money discountFixedRate;
  late int minimumTotalProducts;
  late Status offerFreeDelivery;
  late Status activateUsingCode;
  late List<String> daysOfTheWeek;
  late List<String> daysOfTheMonth;
  late List<String> monthsOfTheYear;
  late Status activateForNewCustomer;
  late Status activateUsingUsageLimit;
  late Status activateUsingHoursOfDay;
  late Status activateUsingEndDatetime;
  late List<String> cancellationReasons;
  late int minimumTotalProductQuantities;
  late Status activateUsingStartDatetime;
  late Status activateUsingDaysOfTheWeek;
  late Percentage discountPercentageRate;
  late Status activateForExistingCustomer;
  late Status activateUsingDaysOfTheMonth;
  late Status activateUsingMonthsOfTheYear;
  late List<DetectedChange> detectedChanges;
  late Status activateUsingMinimumGrandTotal;
  late Status activateUsingMinimumTotalProducts;
  late Status activateUsingMinimumTotalProductQuantities;  

  CouponLine.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    code = json['code'];
    description = json['description'];
    discountType = json['discountType'];
    currency = Currency.fromJson(json['currency']);
    isCancelled = Status.fromJson(json['isCancelled']);
    hoursOfDay = List<String>.from(json['hoursOfDay']);
    minimumTotalProducts = json['minimumTotalProducts'];
    offerDiscount = Status.fromJson(json['offerDiscount']);
    daysOfTheWeek = List<String>.from(json['daysOfTheWeek']);
    daysOfTheMonth = List<String>.from(json['daysOfTheMonth']);
    monthsOfTheYear = List<String>.from(json['monthsOfTheYear']);
    minimumGrandTotal = Money.fromJson(json['minimumGrandTotal']);
    discountFixedRate = Money.fromJson(json['discountFixedRate']);
    offerFreeDelivery = Status.fromJson(json['offerFreeDelivery']);
    activateUsingCode = Status.fromJson(json['activateUsingCode']);
    cancellationReasons = List<String>.from(json['cancellationReasons']);
    minimumTotalProductQuantities = json['minimumTotalProductQuantities'];
    activateForNewCustomer = Status.fromJson(json['activateForNewCustomer']);
    activateUsingUsageLimit = Status.fromJson(json['activateUsingUsageLimit']);
    activateUsingHoursOfDay = Status.fromJson(json['activateUsingHoursOfDay']);
    activateUsingEndDatetime = Status.fromJson(json['activateUsingEndDatetime']);
    discountPercentageRate = Percentage.fromJson(json['discountPercentageRate']);
    activateUsingStartDatetime = Status.fromJson(json['activateUsingStartDatetime']);
    activateUsingDaysOfTheWeek = Status.fromJson(json['activateUsingDaysOfTheWeek']);
    activateForExistingCustomer = Status.fromJson(json['activateForExistingCustomer']);
    activateUsingDaysOfTheMonth = Status.fromJson(json['activateUsingDaysOfTheMonth']);
    activateUsingMonthsOfTheYear = Status.fromJson(json['activateUsingMonthsOfTheYear']);
    endDatetime = json['endDatetime'] == null ? null : DateTime.parse(json['endDatetime']);
    activateUsingMinimumGrandTotal = Status.fromJson(json['activateUsingMinimumGrandTotal']);
    startDatetime = json['startDatetime'] == null ? null : DateTime.parse(json['startDatetime']);
    activateUsingMinimumTotalProducts = Status.fromJson(json['activateUsingMinimumTotalProducts']);
    activateUsingMinimumTotalProductQuantities = Status.fromJson(json['activateUsingMinimumTotalProductQuantities']);
    detectedChanges = (json['detectedChanges'] as List).map((detectedChange) => DetectedChange.fromJson(detectedChange)).toList();
  }
}